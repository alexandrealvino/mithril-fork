# Istio ingressgateway manifest
---
# Source: gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    helm.sh/chart: gateway-1.14.1
    app: ingressgateway
    istio: ingressgateway
    app.kubernetes.io/version: "1.14.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingressgateway
---
# Source: gateway/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ingressgateway
  namespace: istio-system
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
# Source: gateway/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ingressgateway
  namespace: istio-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingressgateway
subjects:
- kind: ServiceAccount
  name: ingressgateway
---
# Source: gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    helm.sh/chart: gateway-1.14.1
    app: ingressgateway
    istio: ingressgateway
    app.kubernetes.io/version: "1.14.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingressgateway
  annotations:
    {}
spec:
  type: LoadBalancer
  ports:
    - name: status-port
      port: 15021
      protocol: TCP
      targetPort: 15021
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: ingressgateway
    istio: ingressgateway
---
# Source: gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    helm.sh/chart: gateway-1.14.1
    app: ingressgateway
    istio: ingressgateway
    app.kubernetes.io/version: "1.14.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingressgateway
  annotations:
    {}
spec:
  selector:
    matchLabels:
      app: ingressgateway
      istio: ingressgateway
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      labels:
        spireSpiffeid: ingress
        sidecar.istio.io/inject: "true"
        app: ingressgateway
        istio: ingressgateway
    spec:
      serviceAccountName: ingressgateway
      securityContext:
      containers:
        - name: istio-proxy
          # "auto" will be populated at runtime by the mutating webhook. See https://istio.io/latest/docs/setup/additional-setup/sidecar-injection/#customizing-injection
          image: auto
          securityContext:
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE
            runAsUser: 0
            runAsGroup: 1337
            runAsNonRoot: false
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: true
          env:
          ports:
          - containerPort: 15090
            protocol: TCP
            name: http-envoy-prom
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: workload-socket
          csi:
            driver: csi.spiffe.io
---
# Source: gateway/templates/hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: ingressgateway
  namespace: istio-system
  labels:
    helm.sh/chart: gateway-1.14.1
    app: ingressgateway
    istio: ingressgateway
    app.kubernetes.io/version: "1.14.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingressgateway
  annotations:
    {}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ingressgateway
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization

